syntax = "proto3";

package tests;

import "koinos/options.proto";


message transfer_arguments {

   message nested_message {
      bytes from = 1 [(koinos.btype) = ADDRESS];
      bytes to = 2 [(koinos.btype) = ADDRESS];
      uint64 value = 3 [jstype = JS_STRING];
   }

   bytes from = 1 [(koinos.btype) = ADDRESS];
   bytes to = 2 [(koinos.btype) = ADDRESS];
   uint64 value = 3 [jstype = JS_STRING];
}
 
message transfer_result {
   bool value = 1;
}

message oneof_message {
   optional uint32 test1 = 1;

   oneof response {
      transfer_result tranfer_res = 2;
      transfer_arguments transfer_arg = 3;
   }

   optional uint32 test2 = 4;
}

message repeated_message {
   repeated string value = 1;
   repeated transfer_result result = 2;
}

enum authorization_type {
   contract_call = 0;
   transaction_application = 1;
   contract_upload = 2;
}

message call_data {
   bytes contract_id = 1 [(koinos.btype) = ADDRESS];
   uint32 entry_point = 2;
   bytes caller = 3;
   bytes data = 4;
}

message authorize_arguments {
   authorization_type type = 1;
   optional call_data call = 2;
}